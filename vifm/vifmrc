" vim: filetype=vifm :

if executable('nvim')
    set vicmd=nvim
elseif executable('vim')
    set vicmd=vim
elseif $EDITOR != ''
    let &vicmd = $EDITOR
endif

set syscalls

" set trash

set vifminfo=dhistory,chistory,state,tui,shistory,
            \phistory,fhistory,dirstack,registers,bookmarks,bmarks

set fastrun

set history=100

set nofollowlinks

set sortnumbers

set undolevels=100

set vimhelp

set norunexec

set wildmenu
set wildstyle=popup

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

set ignorecase
set smartcase

set nohlsearch
set incsearch

set scrolloff=8

set slowfs=curlftpfs

set timefmt='%Y/%m/%d %H:%M'
set statusline=" %t %T %= %A %10u:%-7g %15s %20d %{&sort} "

colorscheme Default-256 Default

" ------------------------------------------------------------------------------
" Bookmarks
" ------------------------------------------------------------------------------

mark c ~/.config/
mark d ~/Downloads/
mark h ~/
mark r ~/repos/

" ------------------------------------------------------------------------------
" Commands
" ------------------------------------------------------------------------------

command! df df -h %m 2> /dev/null
command! diff nvim -d %f %F
command! zip zip -r %c.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! reload :write | restart full
command! ztab zellij action new-tab -c %d -l compact
command! tw tmux new-window -c %d

" ------------------------------------------------------------------------------
" keyboard mappings
" ------------------------------------------------------------------------------

" Start shell in new tmux tab with current directory
nnoremap s :tw<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in new nvim
nnoremap o :!nvim %f<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" As above, but without the file extension
" nnoremap I cW<c-a>
" nnoremap cc cW<c-u>
" nnoremap A cW

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" Midnight commander alike mappings
" Open current directory in the other pane
nnoremap <a-i> :sync<cr>
" Open directory under cursor in the other pane
nnoremap <a-o> :sync %c<cr>
" Swap panes
nnoremap <c-u> <c-w>x

" ------------------------------------------------------------------------------
" Panel configuration examples
" ------------------------------------------------------------------------------

" Customize view columns a bit (enable ellipsis for truncated file names)
" set viewcolumns=-{name}..,6{size}

" Show vertical border
" set fillchars=vborder:â”‚

" Filter-out build and temporary files
" filter! {*.lo,*.o,*.d,*.class,*.pyc,*.pyo,.*~}

" ------------------------------------------------------------------------------
" Various customization examples
" ------------------------------------------------------------------------------

" Use ag (the silver searcher) instead of grep
" set grepprg='ag --line-numbers %i %a %s'

" Add additional place to look for executables
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername

" load different config
if filereadable(expand("$HOME/.config/vifm/linux.rc"))
    source $HOME/.config/vifm/linux.rc
elseif filereadable(expand("$HOME/.config/vifm/macos.rc"))
    source $HOME/.config/vifm/macos.rc
endif
